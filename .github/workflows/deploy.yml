name: Deploy Widget

on:
  push:
    branches:
      - main
    paths:
      - 'packages/widget/**'
      - '.github/workflows/deploy.yml'

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build packages
        run: |
          npm run build -w @shoprocket/core
          npm run build -w @shoprocket/widget
          echo "‚úÖ Build complete"
          ls -la packages/widget/dist/

      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Deploy to server
        env:
          DEPLOY_HOST: ${{ secrets.DEPLOY_HOST }}
        run: |
          # Add timeout to ssh-keyscan and better error handling
          echo "üîç Scanning SSH host: $DEPLOY_HOST"
          ssh-keyscan -T 10 -H $DEPLOY_HOST >> ~/.ssh/known_hosts 2>&1 || {
            echo "‚ùå Failed to scan SSH host. Please check:"
            echo "   - Server is accessible on port 22"
            echo "   - DEPLOY_HOST secret is correct"
            echo "   - No firewall blocking GitHub Actions IPs"
            exit 1
          }
          
          echo "‚úÖ SSH host scanned successfully"
          
          # Test SSH connection with verbose output
          echo "üîó Testing SSH connection..."
          ssh -vvv -o ConnectTimeout=30 -o StrictHostKeyChecking=no root@$DEPLOY_HOST "echo 'SSH connection successful'" || {
            echo "‚ùå SSH connection failed. Common causes:"
            echo "   - Firewall blocking GitHub Actions IPs"
            echo "   - SSH key not authorized for root user"
            echo "   - SSH service not allowing root login"
            echo "   - Port 22 blocked for incoming connections"
            echo ""
            echo "GitHub Actions IP ranges can be found at:"
            echo "https://api.github.com/meta"
            exit 1
          }
          
          # Create directory and deploy files
          echo "üìÅ Creating deployment directory..."
          ssh -o ConnectTimeout=30 root@$DEPLOY_HOST "mkdir -p /home/var/www/widget"
          
          echo "üì§ Uploading files..."
          rsync -avz --delete --timeout=60 -e "ssh -o ConnectTimeout=30" packages/widget/dist/ root@$DEPLOY_HOST:/home/var/www/widget/
          
          # Set permissions
          echo "üîß Setting permissions..."
          ssh -o ConnectTimeout=30 root@$DEPLOY_HOST "chown -R www-data:www-data /home/var/www/widget && chmod -R 755 /home/var/www/widget"
          
          echo "‚úÖ Deployment complete!"