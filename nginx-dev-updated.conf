server {
    server_name dev-cdn.shoprocket.io;
    root /home/var/www/dev/public;

    index index.php index.html index.htm;

    # Serve widget files from /home/var/www/widget
    location ~ ^/(shoprocket\.js|test-semantic-theming\.html)$ {
        root /home/var/www/widget;
        
        # CORS headers for widget embedding
        add_header Access-Control-Allow-Origin "*" always;
        add_header Access-Control-Allow-Methods "GET, OPTIONS" always;
        add_header Access-Control-Allow-Headers "Origin, Content-Type, Accept" always;
        
        # Cache control for widget JS
        expires 1h;
        add_header Cache-Control "public, must-revalidate";
        
        # Gzip
        gzip on;
        gzip_types application/javascript text/javascript;
        
        # Handle OPTIONS
        if ($request_method = 'OPTIONS') {
            return 204;
        }
    }

    location / {
        try_files $uri $uri/ /index.php?$query_string;
    }

    location /media/ {
        alias /home/var/www/dev/storage/app/public/media/;

        # Try to serve the file directly
        try_files $uri $uri/ @laravel;
    }

    # Fallback to Laravel for requests not found in the media directory
    location @laravel {
        rewrite ^/media/(.*)$ /index.php?$query_string;
    }

    location ~ \.php$ {
        include snippets/fastcgi-php.conf;
        fastcgi_pass unix:/var/run/php/php-fpm.sock;
    }

    location ~ /\.ht {
        deny all;
    }

    # Additional security headers
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-XSS-Protection "1; mode=block" always;

    # Set maximum upload size
    client_max_body_size 100m;

    listen 443 ssl; # managed by Certbot
    ssl_certificate /etc/letsencrypt/live/acerepairs.co-0001/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/acerepairs.co-0001/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot
}

server {
    if ($host = dev-cdn.shoprocket.io) {
        return 301 https://$host$request_uri;
    } # managed by Certbot

    server_name dev-cdn.shoprocket.io;
    listen 80;
    return 301 https://$host$request_uri;
}